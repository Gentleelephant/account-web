// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/account": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "GetAccountByMobile",
                "operationId": "GetAccountByMobile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "@inject_tag: json:\"mobile\"",
                        "name": "mobile",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "The unique id with this request"
                            }
                        }
                    },
                    "default": {
                        "description": "Return if any error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "The unique id with this request"
                            }
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "UpdateAccount",
                "operationId": "UpdateAccount",
                "parameters": [
                    {
                        "description": "The account",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.UpdateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "The unique id with this request"
                            }
                        }
                    },
                    "default": {
                        "description": "Return if any error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "The unique id with this request"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "CheckPassword",
                "operationId": "CheckPassword",
                "parameters": [
                    {
                        "description": "The password info",
                        "name": "info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.CheckPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "The unique id with this request"
                            }
                        }
                    },
                    "default": {
                        "description": "Return if any error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "The unique id with this request"
                            }
                        }
                    }
                }
            }
        },
        "/v1/account/page": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "GetAccountList",
                "operationId": "GetAccountList",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "@inject_tag: json:\"page\"",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "@inject_tag: json:\"pageSize\"",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "The unique id with this request"
                            }
                        }
                    },
                    "default": {
                        "description": "Return if any error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "The unique id with this request"
                            }
                        }
                    }
                }
            }
        },
        "/v1/account/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "GetAccountByID",
                "operationId": "GetAccountByID",
                "parameters": [
                    {
                        "description": "The user id",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pb.IDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "The unique id with this request"
                            }
                        }
                    },
                    "default": {
                        "description": "Return if any error",
                        "schema": {
                            "$ref": "#/definitions/model.Response"
                        },
                        "headers": {
                            "X-Request-Id": {
                                "type": "string",
                                "description": "The unique id with this request"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "pb.AddAccountRequest": {
            "type": "object",
            "properties": {
                "gender": {
                    "description": "@inject_tag: json:\"gender\"",
                    "type": "string"
                },
                "mobile": {
                    "description": "@inject_tag: json:\"mobile\"",
                    "type": "string"
                },
                "nickname": {
                    "description": "@inject_tag: json:\"nickname\"",
                    "type": "string"
                },
                "password": {
                    "description": "@inject_tag: json:\"password\"",
                    "type": "string"
                }
            }
        },
        "pb.CheckPasswordRequest": {
            "type": "object",
            "properties": {
                "hashPassword": {
                    "description": "@inject_tag: json:\"hashPassword\"",
                    "type": "string"
                },
                "id": {
                    "description": "@inject_tag: json:\"id\"",
                    "type": "string"
                },
                "password": {
                    "description": "@inject_tag: json:\"password\"",
                    "type": "string"
                }
            }
        },
        "pb.IDRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "@inject_tag: json:\"id\" form:\"id\"",
                    "type": "integer"
                }
            }
        },
        "pb.UpdateAccountRequest": {
            "type": "object",
            "properties": {
                "gender": {
                    "description": "@inject_tag: json:\"gender\"",
                    "type": "string"
                },
                "id": {
                    "description": "@inject_tag: json:\"id\"",
                    "type": "integer"
                },
                "mobile": {
                    "description": "@inject_tag: json:\"mobile\"",
                    "type": "string"
                },
                "nickname": {
                    "description": "@inject_tag: json:\"nickname\"",
                    "type": "string"
                },
                "password": {
                    "description": "@inject_tag: json:\"password\"",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
